pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = 'auto-test-image'            // Docker 镜像名称
        ECS_IP = '8.149.129.172'                    // 阿里云 ECS 的 IP 地址
        SSH_CREDENTIALS = 'ecs-ssh-credentials'     // Jenkins 中设置的 SSH 凭据 ID
        ALLURE_RESULTS_DIR = '/usr/automation_pipeline/automation_test/report'  // Allure 报告 JSON 生成目录
    }

    stages {
        stage('Clone Repository') {
            steps {
                // 从 GitHub 仓库克隆代码
                git branch: 'main', url: 'https://github.com/taicilang-lcy/Automation_Test.git', credentialsId: 'github-automation-test-token'
            }
        }

        stage('Build Docker Image on ECS') {
            steps {
                // SSH 到阿里云 ECS，并在远程服务器上构建 Docker 容器
                script {
                    sshagent([SSH_CREDENTIALS]) {
                        sh """
                        ssh -o StrictHostKeyChecking=no root@${ECS_IP} '
                            cd /usr/automation_pipeline/automation_test && 
                            /usr/bin/git pull && 
                            docker build -t ${DOCKER_IMAGE} .'
                        """
                    }
                }
            }
        }

        stage('Run Tests in Docker on ECS') {
            steps {
                script {
                    sshagent([SSH_CREDENTIALS]) {
                        // 运行测试，并生成 Allure 的 JSON 结果
                        sh """
                        ssh -o StrictHostKeyChecking=no root@${ECS_IP} 'docker run -v ${ALLURE_RESULTS_DIR}:/report ${DOCKER_IMAGE} pytest --alluredir=/report tests/'
                        """
                    }
                }
            }
        }

        stage('Fetch Allure Results') {
            steps {
                script {
                    sshagent([SSH_CREDENTIALS]) {
                        // 从 ECS 下载 Allure JSON 结果文件到 Jenkins 工作区
                        sh """
                        scp -o StrictHostKeyChecking=no -r root@${ECS_IP}:${ALLURE_RESULTS_DIR}/* ./allure-results
                        """
                    }
                }
            }
        }

        stage('Generate Allure HTML Report') {
            steps {
                // 在 Jenkins 本地生成静态的 Allure HTML 报告
                sh 'allure generate ./allure-results -o ./allure-report --clean'
            }
        }

        stage('Archive Allure Report') {
            steps {
                // 归档生成的 HTML 报告，供 Jenkins 查看
                archiveArtifacts artifacts: './allure-report/**/*', allowEmptyArchive: true
            }
        }

        stage('Send Email with Allure Report') {
            steps {
                // 发送带有 Allure 报告链接的邮件通知
                emailext(
                    subject: "Automation Test Report",
                    body: """<p>Test report is ready. Check the attached Allure report.</p><p><a href="${BUILD_URL}artifact/allure-report/index.html">Allure Report</a></p>""",
                    mimeType: 'text/html',
                    attachLog: true,
                    recipientProviders: [[$class: 'DevelopersRecipientProvider']]
                )
            }
        }
    }

    post {
        always {
            cleanWs()  // 清理工作区
        }
        success {
            echo 'Tests ran successfully!'  // 成功消息
        }
        failure {
            echo 'Build or tests failed.'  // 失败消息
        }
    }
}
